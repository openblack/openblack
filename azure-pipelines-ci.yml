trigger:
- master
pr:
- master

jobs:
- job: format
  displayName: 'Format'
  pool:
    vmImage: 'ubuntu-16.04'
  container: 'openblack/compile-farm-ci:linux-amd64-gcc'

  steps:
    - task: CMake@1
      displayName: 'CMake'
      inputs:
        cmakeArgs: '-DCMAKE_TOOLCHAIN_FILE=/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-linux -Dbgfx_DIR=/bgfx-install/lib/cmake/bgfx ..'

    - script: |
        set -eo pipefail
        clang-format --version
        cmake --build . --target clang-format
        git diff -p --stat --color
        git diff > format.patch
        git diff --quiet $(Build.SourceVersion)
      workingDirectory: build
      failOnStderr: true
      displayName: 'Clang-Format'

    - publish: $(System.DefaultWorkingDirectory)/build/format.patch
      artifact: clang-format-patch-$(Build.SourceVersion)
      displayName: 'Clang-Format Publish Diff File'
      condition: failed()

- job: windows
  displayName: 'Windows'
  pool:
    vmImage: 'windows-2019'

  strategy:
    matrix:
      x86-Debug:
        BuildPlatform: 'x86'
        MSBuildPlatform: 'Win32'
        BuildConfiguration: Debug
      x86-Release:
        BuildPlatform: 'x86'
        MSBuildPlatform: 'Win32'
        BuildConfiguration: Release
      x64-Debug:
        BuildPlatform: 'x64'
        MSBuildPlatform: 'x64'
        BuildConfiguration: Debug
      x64-Release:
        BuildPlatform: 'x64'
        MSBuildPlatform: 'x64'
        BuildConfiguration: Release

  steps:
  - template: azure-pipelines/templates/git-rebase.yml
  - template: azure-pipelines/templates/windows-dependencies.yml
    parameters:
      BuildPlatform: $(BuildPlatform)
      MSBuildPlatform: $(MSBuildPlatform)
  - template: azure-pipelines/templates/windows-build.yml
    parameters:
      BuildPlatform: $(BuildPlatform)
      BuildConfiguration: $(BuildConfiguration)
      MSBuildPlatform: $(MSBuildPlatform)
  - template: azure-pipelines/templates/publish.yml
    parameters:
      BuildConfiguration: $(BuildConfiguration)
      InstallPlatform: Windows-$(BuildPlatform)
  - template: azure-pipelines/templates/test-null-renderer.yml
    parameters:
      BuildConfiguration: $(BuildConfiguration)

- job: linux
  displayName: 'Linux'
  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      linux-amd64-gcc-Debug:
        containerImage: 'openblack/compile-farm-ci:linux-amd64-gcc'
        BuildConfiguration: Debug
      linux-amd64-gcc-Release:
        containerImage: 'openblack/compile-farm-ci:linux-amd64-gcc'
        BuildConfiguration: Release

  container: $[ variables['containerImage'] ]

  steps:
  - template: azure-pipelines/templates/git-rebase.yml
  - template: azure-pipelines/templates/linux-build.yml
    parameters:
      BuildConfiguration: $(BuildConfiguration)
  - template: azure-pipelines/templates/publish.yml
    parameters:
      BuildConfiguration: $(BuildConfiguration)
      InstallPlatform: Linux-x64
  - template: azure-pipelines/templates/test-null-renderer.yml
