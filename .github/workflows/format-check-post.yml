name: Post Formatting Check

on:
  workflow_run:
    workflows: ["Formatting Check"]
    types:
      - completed

jobs:
  clang-format-action-suggester:
    name: clang-format fix suggester
    runs-on: ubuntu-latest
    if: always() && startsWith(github.event_name, 'pull_request') && github.event.workflow_run.conclusion == 'failure'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: 'src apps components test'
          clangFormatVersion: 12
          inplace: True
      - run: |
          git diff > clang-format.patch
      - uses: actions/upload-artifact@v2
        with:
          name: formatting-fix-${{github.sha}}
          path: clang-format.patch
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: clang-format

  linelint-action-suggester:
    name: linelint fix suggester
    runs-on: ubuntu-latest
    if: always() && startsWith(github.event_name, 'pull_request') && github.event.workflow_run.conclusion == 'failure'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - run: |
          printf 'autofix: true\nrules:\n  end-of-file:\n    enable: true\n' > .linelint.yml
      - uses: fernandrone/linelint@master
      - run: |
          git diff > linelint.patch
      - uses: actions/upload-artifact@v2
        with:
          name: formatting-fix-${{github.sha}}
          path: linelint.patch
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: linelint

  cmake-format-action-suggester:
    name: cmake-format fix suggester
    runs-on: ubuntu-latest
    if: always() && startsWith(github.event_name, 'pull_request') && github.event.workflow_run.conclusion == 'failure'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - name: Format CMake files
        id: cmake-format
        uses: PuneetMatharu/cmake-format-lint-action@v1.0.0
        with:
          args: --config-files .cmake-format.py --in-place
      - run: |
          git diff > cmake-format.patch
      - uses: actions/upload-artifact@v2
        with:
          name: formatting-fix-${{github.sha}}
          path: cmake-format.patch
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: cmake-format
  
  copyright-check-action-suggester:
    name: license_checker fix suggester
    runs-on: ubuntu-latest
    if: always() && startsWith(github.event_name, 'pull_request') && github.event.workflow_run.conclusion == 'failure'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - uses: denoland/setup-deno@main
        with:
          deno-version: v1.x
      - name: Check License Lines
        run: deno run --allow-read --allow-write https://deno.land/x/license_checker@v3.2.2/main.ts --quiet --inject
      - run: git diff > license-check.patch
      - uses: actions/upload-artifact@v2
        with:
          name: formatting-fix-${{github.sha}}
          path: license-check.patch.patch
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: license_checker