name: Cross Compile CI
on:
  pull_request_target:
  push:
    tags:
    branches:
      - 'master'
      - 'ci-tests/**'  # Branch namespace can be used to test changes to test before going to master
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # This is the matrix. They form permutations.
        os: [ubuntu-22.04]
        preset: [android-armeabi-v7a-vcpkg, android-arm64-v8a-vcpkg, android-x86-vcpkg, android-x86_64-vcpkg]
        triplet: [""]
        # These are additional individual jobs. There are no permutations of these.
        include:
          # Testing x86-windows bit in debug only
          - os: windows-latest
            preset: ninja-multi-vcpkg
            triplet: x86-windows

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          submodules: recursive

      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')

      - name: Install Linux dependencies
        run: |
          sudo apt update -y
          sudo apt install -y libgl1-mesa-dev libglu1-mesa-dev
        if: startsWith(matrix.os, 'ubuntu')

      # Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if not already: on subsequent runs both will be quickly restored from GitHub cache service.
      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgJsonGlob: 'vcpkg.json'
          # Prevent all ubuntu-latest and windows-latest builds from having the same key
          appendedCacheKey: ${{matrix.preset}}${{matrix.triplet}}

      - name: Configure CMake+vcpkg.
        uses: lukka/run-cmake@v10
        with:
          configurePreset: '${{ matrix.preset }}'
          configurePresetCmdString: "[`--preset`, `$[env.CONFIGURE_PRESET_NAME]`, `-DOPENBLACK_WARNINGS_AS_ERRORS=ON`]"
        env:
          CXX: ''
          CC: ''

      - name: Run CMake+vcpkg to build (Debug).
        uses: lukka/run-cmake@v10
        with:
          configurePreset: '${{ matrix.preset }}'
          configurePresetCmdString: "[`--preset`, `$[env.CONFIGURE_PRESET_NAME]`, `-DOPENBLACK_WARNINGS_AS_ERRORS=ON`]"
          buildPreset: '${{ matrix.preset }}-debug'
        env:
          CXX: ''
          CC: ''

      - name: Run CMake+vcpkg to build (Release).
        uses: lukka/run-cmake@v10
        with:
          configurePreset: '${{ matrix.preset }}'
          configurePresetCmdString: "[`--preset`, `$[env.CONFIGURE_PRESET_NAME]`, `-DOPENBLACK_WARNINGS_AS_ERRORS=ON`]"
          buildPreset: '${{ matrix.preset }}-release'
        env:
          CXX: ''
          CC: ''

      - uses: actions/upload-artifact@v3
        with:
          name: openblack-${{ matrix.triplet || matrix.preset }}-${{github.sha}}
          path: cmake-build-presets/${{ matrix.preset }}/bin
          if-no-files-found: error

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
