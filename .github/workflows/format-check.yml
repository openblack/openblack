name: Formatting Check
on:
  pull_request_target:
  push:
    tags:
    branches:
      - 'master'
jobs:
  formatting-check:
    name: clang-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: 'src apps components test'
          clangFormatVersion: 12
          inplace: False

  # Run only if a PR and clang-format has failed
  formatting-action-suggester:
    name: clang-format fix suggester
    runs-on: ubuntu-latest
    needs: formatting-check
    if: always() && startsWith(github.event_name, 'pull_request') && needs.formatting-check.result == 'failure'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: 'src apps components test'
          clangFormatVersion: 12
          inplace: True
      - run: |
          git diff > clang-format.patch
      - uses: actions/upload-artifact@v2
        with:
          name: formatting-fix-${{github.sha}}
          path: clang-format.patch
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: clang-format

  linelint:
    name: linelint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - uses: fernandrone/linelint@master

  linelint-action-suggester:
    name: linelint fix suggester
    runs-on: ubuntu-latest
    needs: linelint
    if: always() && startsWith(github.event_name, 'pull_request') && needs.linelint.result == 'failure'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - run: |
          printf 'autofix: true\nrules:\n  end-of-file:\n    enable: true\n' > .linelint.yml
      - uses: fernandrone/linelint@master
      - run: |
          git diff > linelint.patch
      - uses: actions/upload-artifact@v2
        with:
          name: formatting-fix-${{github.sha}}
          path: linelint.patch
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: linelint

  copyright-check:
    name: Copyright Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Add base repo to git config
        run: git remote add upstream ${{ github.event.pull_request.base.repo.html_url }}
        if: startsWith(github.event_name, 'pull_request')
      - name: Check License Lines
        uses: kt3k/license_checker@v1.0.6

  gradle-lint:
    name: Gradle Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Set NDK 23
        run: |
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: lint
          build-root-directory: android
